@using Entity.DTOs.Blogs
@model BlogListDto
@{
    ViewData["Title"] = "Blog";
}

<div class="service-banner-img  ">
    <div class="ovrllay">
        <!-- Header_Area -->
        @await Component.InvokeAsync("Header")
        <!-- End Header_Area -->
        <!-- #banner start -->
        <section id="banner" class="py-70">
            <div class="container ">
                <div class="row py-70 ">
                    <!-- #banner-text start -->
                    <div id="banner-text" class="col-md-12 text-c  ">
                        <div class="left-borders">
                            <h5 class="wow fadeInUp main-about_h" data-wow-delay="0.2s" style="visibility: visible; animation-delay: 0.2s; animation-name: fadeInUp;">BLOGLAR</h5>
                            
                        </div>

                    </div>
                </div>
            </div>
        </section>
    </div>
</div>
<section class="blog-area ptb-140 bg-1">
    <div class="container">
        <div class="row">
        
            @foreach (var blog in Model.Blogs)
            {
                <div class="col-md-4 col-sm-6 col-xs-12 mt-50 wow fadeInUp">
                    <div class="blog-wrap  mb-30">
                        <div class="blog-img">
                            @{
                                string imagePath = "/star-law-master/assets/images/blog/1.jpg"; // Varsayılan resim yolu
                                if (blog != null && blog.Image != null && !string.IsNullOrEmpty(blog.Image.FileName))
                                {
                                    imagePath = $"~/images/{blog.Image.FileName}"; // Blogun resim yolunu ~ ile başlatarak alır
                                }
                            }

                            <img src="@Url.Content(imagePath)" alt="Blog Resmi" >

                        </div>
                        <div class="blog-content">
                            <div class="blog-meta">
                                <ul>
                                    <li><a href="#"><i class="fa fa-user"></i>@blog.CreatedBy</a></li>
   
                                    <li><a href="#"><i class="fa fa-heart"></i>@blog.ViewCount defa görüntülendi</a></li>
                                </ul>
                            </div>
                            <h3><a href="blog-single.html">@(blog.Title.Length > 35 ? blog.Title.Substring(0,35) : blog.Title)..</a></h3>
                            <p>@Html.Raw((blog.Content.Length > 100 ? blog.Content.Substring(0, 100) : blog.Content))  ...</p>
                            <a asp-controller="Blog" asp-action="Detail" asp-route-id="@blog.Id" class="btn btn-default btn_font_16">Devamını oku</a>
                        </div>
                    </div>
                </div>
            }
            
            <div class="col-xs-12">
                <div class="pagination-wrap mt-50 wow fadeInUp">
                    <ul>
                        @if (Model.ShowPrevious)
                        {
                            <li><a asp-route-currentPage="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize"><i class="fa fa-angle-left"></i></a></li>
                        }
                        @for (int i = 1; i < Model.TotalPages; i++)
                        {
                            <li class="@(i == Model.CurrentPage ? "active" : "")">
                                <a asp-route-currentPage="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                            </li>
                        }
                        
                        @if (Model.ShowNext)
                        {
                            <li><a asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize"><i class="fa fa-angle-right"></i></a></li>
                        }
                       
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section> 


@await Component.InvokeAsync(typeof(WEB.ViewComponents.FooterViewComponent))
